*libtwobitxml* is a lightweight DOM-based xml parsing library written in C. It is non-validating and intended to simplify a programmers route to proper XML import. The library features an API designed specifically for the import of game data stored in XML.  Most other XML parsers assume a great deal of xml-structural knowledge of the user, and require a great deal of hand-wringing to get data out of the XML file in a language-native type.  This is especially difficult for C, as the language provides no simple databinding mechanisms in contrast to high-level languages like JavaScript. 
With libtwobitxml user no longer needs to concentrate on the binding between XML source data and native program data. around every node fetch, as the API is built around enabling simple data fetching routines.

h2. *Features*

* A very simple and elegant API that allows proper XML file import, search, and C-native-type extraction in less than twelve parsecs (about 4 function calls).
* Fairly robust, ignoring unknown entities, and gracefully handling badly-formed XML.
* All text files are converted internally to full unicode, using libiconv, so almost all text encodings can be handled with little or no modification to the library.
* Very helpful Graphviz DOTfile generator for visualisation of the XML DOM heirarchy. 
Generated file visualised with "XDot":https://code.google.com/p/jrfonseca/wiki/XDot below:

!http://redmine.lukedrummond.net/attachments/download/13/dotfile_visualisation.png!

h2. **Three Step Tutorial**
 
**1 - Import your XML file**


    @node * tree = xmlGetDOMFromFile("path/to/my/file.xml");@
    
    
 **2 - Find the node you need**


    @tree = xmlGetNodeFromDotPath(tree, L"DocRoot.drawing.pixels.rgb_triplets");@
    

 **3 - Get the data you want as a C-native type using familiar Javascript like dotted separators**


    @myFloatArray = xmlGetDataArrayDouble(tree, 12); //get a native C array of 12 data elements@
  

h2. *Dependencies and Supported systems*

libtwobitxml expects internal UCS-4 support, and libiconv. Therefore this should work pretty well on any Unix-ish system. For a number of reasons, it is unlikely that this library is going to work on Windows without a bit of hacking. This should not be difficult. If you want to help this effort, please get in touch.

*  "libiconv":https://www.gnu.org/s/libiconv/  - GNU software's conversion routines for text transformation etc.

h2. *Getting and Building*

After cloning the source tree, you can build this very quickly.  The simplest possible scons file has been included, but if you don't use scons, this should do:
<pre>
1. git clone git://github.com/herebedragons/twobitxml.git
2. `cd twobitxml/src`
3. `gcc *.c -fPIC -shared -olibtwobitxml.so` 
</pre>

h2. *Documentation*

A Doxygen generated programmers' manual is available in PDF, HTML etc, and can be built from the source.
<pre>
1. Clone the repo
2. `cd twobitxml`
3. `doxygen` 
4. `cd docs/latex`
5. `make`
6. Read the refman.pdf file located in the latex folder.
</pre>

h2. *License*

This software is Copyright (C) Luke Drummond, but is licensed to the community under the very liberal "zlib licence":https://en.wikipedia.org/wiki/Zlib_license
